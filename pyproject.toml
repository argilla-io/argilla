[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "rubrix"
description = "Open-source tool for exploring, labeling, and monitoring data for NLP projects."
readme = "README.md"
requires-python = ">=3.7"
license = {text = "Apache-2.0"}
keywords = [
    "data-science",
    "natural-language-processing",
    "text-labeling",
    "data-annotation",
    "artificial-intelligence",
    "knowledged-graph",
    "developers-tools",
    "human-in-the-loop",
    "mlops"
]
authors = [
    {name = "recognai", email = "contact@recogn.ai"}
]
maintainers = [
    {name = "recognai", email = "contact@recogn.ai"}
]
dependencies = [
    # Client
    "httpx ~= 0.15.0",
    "packaging >= 20.0",
    # pandas -> For data loading
    "pandas >=1.0.0,<2.0.0",
    # Aligned pydantic version with server fastAPI
    "pydantic >= 1.7.1",
    # monitoring
    "wrapt ~= 1.13.0",
    # weaksupervision
    "numpy",
    "tqdm >= 4.27.0"

]
dynamic = ["version"]

[project.optional-dependencies]
server = [
    # Basic dependencies
    "fastapi ~= 0.75.0",
    "opensearch-py ~= 1.0.0",
    "uvicorn[standard] >= 0.15.0,<0.18.0",
    "smart-open",
    "brotli-asgi ~= 1.1.0",
    "Deprecated ~= 1.2.0",
    # Advanced query search dsl
    "luqum ~= 0.11.0",
    # metrics
    "scikit-learn >= 0.24.2",
    # Words cloud
    "stopwordsiso ~= 0.6.1",
    # Statics server
    "aiofiles~=0.6.0",
    "PyYAML~=5.4.1",
    # security dependencies
    "python-multipart~=0.0.5",
    "python-jose[cryptography]~=3.2.0",
    "passlib[bcrypt]~=1.7.4",
    # Info status
    "psutil ~= 5.8.0",
    # Telemetry
    "segment-analytics-python != 2.2.1"
]
listeners = [
    "schedule ~= 1.1.0",
    "prodict ~= 0.8.0"
]

[project.urls]
homepage = "https://www.rubrix.ml"
documentation = "https://docs.rubrix.ml"
repository = "https://github.com/recognai/rubrix"

[tool.setuptools.dynamic]
version = {attr = "rubrix.__version__"}

[tool.pytest.ini_options]
log_format = "%(asctime)s %(name)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli = "True"
testpaths = [
    "tests"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if _TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:"
]

[tool.isort]
profile = "black"
