[build-system]
requires = ["setuptools>=61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "argilla"
description = "Open-source tool for exploring, labeling, and monitoring data for NLP projects."
readme = "README.md"
requires-python = ">=3.8,<3.12"
license = { text = "Apache-2.0" }
keywords = [
    "data-science",
    "natural-language-processing",
    "text-labeling",
    "data-annotation",
    "artificial-intelligence",
    "knowledged-graph",
    "developers-tools",
    "human-in-the-loop",
    "mlops",
]
authors = [{ name = "argilla", email = "contact@argilla.io" }]
maintainers = [{ name = "argilla", email = "contact@argilla.io" }]
dependencies = [
    # Client
    "httpx >= 0.15,< 0.24",
    "deprecated ~= 1.2.0",
    "packaging >= 20.0",
    # pandas -> For data loading
    "pandas >=1.0.0,<2.0.0",
    # Aligned pydantic version with server fastAPI
    "pydantic >= 1.10.7,< 2.0",
    # monitoring
    "wrapt >= 1.13,< 1.15",
    # weaksupervision
    "numpy < 1.24.0",
    # for progressbars
    "tqdm >= 4.27.0",
    # monitor background consumers
    "backoff",
    "monotonic",
    # for logging, tracebacks, printing, progressbars
    "rich != 13.1.0",
    # for CLI
    "typer >= 0.6.0, < 0.8.0", # spaCy only supports typer<0.8.0
]
dynamic = ["version"]

[project.optional-dependencies]
server = [
    # Basic dependencies
    "fastapi >= 0.103.1",
    "opensearch-py ~= 2.0.0",
    "elasticsearch8[async] ~= 8.7.0",
    "uvicorn[standard] >= 0.15.0,< 0.21.0",
    "smart-open",
    "brotli-asgi >= 1.1,< 1.3",
    # Database dependencies
    "alembic ~= 1.9.0",
    "SQLAlchemy ~= 2.0.0",
    "greenlet >= 2.0.0",
    # Async SQLite
    "aiosqlite >=0.19.0",
    # metrics
    "scikit-learn >= 0.24.2",
    # Statics server
    "aiofiles >= 0.6,< 22.2",
    "PyYAML >= 5.4.1,< 6.1.0",
    # security dependencies
    "python-multipart ~= 0.0.5",
    "python-jose[cryptography] >= 3.2,< 3.4",
    "passlib[bcrypt] ~= 1.7.4",
    # Info status
    "psutil >= 5.8, <5.10",
    # Telemetry
    "segment-analytics-python == 2.2.0",
]
postgresql = [
    "psycopg2 ~= 2.9.5; sys_platform != 'darwin'",
    # If we're on macOS, then install `psycopg2-binary` instead
    "psycopg2-binary ~= 2.9.5; sys_platform == 'darwin'",
    # Async PostgreSQL
    "asyncpg >=0.27.0",
]
listeners = ["schedule ~= 1.1.0", "prodict ~= 0.8.0"]
integrations = [
    "PyYAML >= 5.4.1,< 6.1.0", # Required by `argilla.client.feedback.config` just used in `HuggingFaceDatasetMixin`
    "cleanlab ~= 2.0.0",
    # TODO: `push_to_hub` fails up to 2.3.2, check patches when they come out eventually
    "datasets > 1.17.0,!= 2.3.2",
    # TODO: some backward comp. problems introduced in 0.5.0
    "huggingface_hub >= 0.5.0",
    # Version 0.12 fixes a known installation issue related to `sentencepiece` and `tokenizers`, more at https://github.com/flairNLP/flair/issues/3129
    # Version 0.12.2 relaxes the `huggingface_hub` dependency
    "flair >= 0.12.2",
    "faiss-cpu",
    "flyingsquid",
    "pgmpy",
    "plotly >= 4.1.0",
    "snorkel >= 0.9.7",
    "spacy == 3.5.3",
    "spacy-transformers >= 1.2.5",
    "transformers[torch] >= 4.30.0",
    "evaluate",
    "seqeval",
    "sentence-transformers",
    "setfit>=0.7.0",
    "span_marker",
    "openai>=0.27.10",
    "peft",
    "trl>=0.5.0",
]
tests = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-asyncio",
    "pytest-env",
    "factory_boy ~= 3.2.1",
]

[project.urls]
homepage = "https://www.argilla.io"
documentation = "https://docs.argilla.io"
repository = "https://github.com/argilla-io/argilla"

[project.scripts]
argilla = "argilla.cli.app:app"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "argilla.__version__" }

[tool.setuptools.package-data]
"argilla.client.feedback.integrations.huggingface.card" = [
    "argilla_template.md",
]

[tool.pytest.ini_options]
log_format = "%(asctime)s %(name)s %(levelname)s %(message)s"
log_date_format = "%Y-%m-%d %H:%M:%S"
log_cli = "True"
testpaths = ["tests"]
env = ["ARGILLA_ENABLE_TELEMETRY=0"]


[tool.coverage.run]
concurrency = ["greenlet", "thread", "multiprocessing"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if _TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
]

[tool.isort]
profile = "black"

[tool.ruff]
# Ignore line length violations
ignore = ["E501"]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 120

[tool.ruff.per-file-ignores]
# Ignore imported but unused;
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
