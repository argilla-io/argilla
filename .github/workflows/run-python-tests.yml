name: Run Argilla python tests

on:
  workflow_call:
    inputs:
      pytestArgs:
        description: "Provide extra args to pytest command line"
        required: true
        type: string
      coverageReport:
        required: false
        type: string
        default: coverage
      searchEngineDockerImage:
        description: "The name of the Docker image of the search engine to use."
        default: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
        required: false
        type: string
      searchEngineDockerEnv:
        description: "The name of the Docker image of the search engine to use."
        default: '{"discovery.type": "single-node", "xpack.security.enabled": "false"}'
        required: false
        type: string
env:
  # Increase this value to reset cache if etc/example-environment.yml has not changed
  CACHE_NUMBER:  5

jobs:
  run-python-tests:
    name: Argilla python tests
    runs-on: ubuntu-latest
    services:
      search_engine:
        image: ${{ inputs.searchEngineDockerImage }}
        ports:
          - 9200:9200
        env: ${{ fromJson(inputs.searchEngineDockerEnv) }}
    defaults:
      run:
        shell: bash -l {0}
    env:
      COVERAGE_REPORT: ${{ inputs.coverageReport }}
    steps:
      - name: Checkout Code üõé
        uses: actions/checkout@v2
      - name: Setup Conda Env üêç
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: argilla
      - name: Get date for conda cache
        id: get-date
        run: echo "::set-output name=today::$(/bin/date -u '+%Y%m%d')"
        shell: bash
      - name: Cache Conda env
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}--${{ steps.get-date.outputs.today }}-${{ hashFiles('environment_dev.yml') }}-${{ env.CACHE_NUMBER }}
      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: mamba env update -n argilla -f environment_dev.yml
      - name: Cache pip üëú
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.CACHE_NUMBER }}-${{ hashFiles('pyproject.toml') }}
      - name: Set huggingface hub credentials
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/releases')
        env:
          HF_HUB_ACCESS_TOKEN: ${{ secrets.HF_HUB_ACCESS_TOKEN }}
        run: echo "Enable HF access token"
      - name: Run tests üìà
        run: |
          pip install -e ".[server,listeners]"
          pytest --cov=argilla --cov-report=xml:${{ env.COVERAGE_REPORT }}.xml ${{ inputs.pytestArgs }}
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ env.COVERAGE_REPORT }}
          path: ${{ env.COVERAGE_REPORT }}.xml