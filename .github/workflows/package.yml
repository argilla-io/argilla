
name: Build package

on:
  release:
    types:
      - 'published'

  push:
    branches:
      - 'main'
      - 'master'
      - 'releases/**'
  pull_request:
    branches:
      - 'main'
      - 'master'
      - 'releases/**'

jobs:

  build:
    name: Build the python package
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v2

      - name: Cache pip 👜
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if pyproject.toml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.CACHE_NUMBER }}-${{ hashFiles('pyproject.toml') }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Build Package 🍟
        run: |
          pip install -U build
          scripts/build_distribution.sh

      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: python-package
          path: dist

  # This job will upload a Python Package using Twine when a release is created
  # For more information see:
  # https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries
  deploy_release:
    name: Deploy Release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    needs:
      - build
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v2
      - name: Download python package
        uses: actions/download-artifact@v2
        with:
          name: python-package
          path: dist
      - name: Publish Package to TestPyPI 🥪
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: Test Installing 🍿
        run: pip install --index-url https://test.pypi.org/simple --no-deps rubrix==${GITHUB_REF#refs/*/v}
      - name: Publish Package to PyPI 🥩
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
