name: Run end2end sdk examples

on:
  workflow_call:
    inputs:
      runsOn:
        required: false
        type: string
        default: extended-runner
      searchEngineDockerImage:
        description: "The name of the Docker image of the search engine to use."
        default: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
        required: false
        type: string
      searchEngineDockerEnv:
        description: "The name of the Docker image of the search engine to use."
        default: '{"discovery.type": "single-node", "xpack.security.enabled": "false"}'
        required: false
        type: string
env:
  # Increase this value to reset cache if etc/example-environment.yml has not changed
  CACHE_NUMBER: 5

jobs:
  # Runs depending on the result from the check-repo-files.yml
  call-check-repo-files:
    uses: ./.github/workflows/check-repo-files.yml

  end2end-examples:
    name: end2end notebook examples, FeedbackDataset for text-classification
    runs-on: ${{ inputs.runsOn }}
    services:
      search_engine:
        image: ${{ inputs.searchEngineDockerImage }}
        ports:
          - 9200:9200
        env: ${{ fromJson(inputs.searchEngineDockerEnv) }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Code 🛎
        uses: actions/checkout@v3
      - name: Setup Conda Env 🐍
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: argilla
      - name: Get date for conda cache
        id: get-date
        run: echo "::set-output name=today::$(/bin/date -u '+%Y%m%d')"
        shell: bash
      - name: Cache Conda env
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}--${{ steps.get-date.outputs.today }}-${{ hashFiles('environment_dev.yml') }}-${{ env.CACHE_NUMBER }}
      - name: Update environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: mamba env update -n argilla -f environment_dev.yml
      - name: Cache pip 👜
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.CACHE_NUMBER }}-${{ hashFiles('pyproject.toml') }}
      - name: Set huggingface hub credentials
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/releases')
        run: |
          echo "HF_HUB_ACCESS_TOKEN=${{ secrets.HF_HUB_ACCESS_TOKEN }}" >> "$GITHUB_ENV"
          echo "Enable HF access token"
      - name: Set Argilla search engine env variable
        if: startsWith(inputs.searchEngineDockerImage, 'docker.elastic.co')
        run: |
          echo "ARGILLA_SEARCH_ENGINE=elasticsearch" >> "$GITHUB_ENV"
          echo "Configure elasticsearch engine"
      - name: Set Argilla search engine env variable
        if: startsWith(inputs.searchEngineDockerImage, 'opensearchproject')
        run: |
          echo "ARGILLA_SEARCH_ENGINE=opensearch" >> "$GITHUB_ENV"
          echo "Configure opensearch engine"
      - name: Launch Argilla Server
        env:
          ARGILLA_ENABLE_TELEMETRY: 0
        run: |
          pip install -e ".[server]"
          python -m argilla server database migrate
          python -m argilla server database users create_default
          uvicorn argilla.server.app:app --port 6900 --host 0.0.0.0 &
      - name: Run end2end examples 📈
        env:
          ARGILLA_ENABLE_TELEMETRY: 0
          HF_HUB_ACCESS_TOKEN: ${{ secrets.HF_HUB_ACCESS_TOKEN }}
        run: |
          pip install papermill
          python scripts/end2end_examples.py
